# -*- mode: ruby -*-
# vi: set ft=ruby :

# vm configuration
NODES = 2
MEMORY = 1024
CPUS = 2

Vagrant.configure(2) do |config|
  (1..NODES).each do |i|
    config.vm.define "flocker-#{i}" do |node|
      node.vm.box = "ubuntu/trusty64"
      node.vm.box_url = "https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box"
      node.vm.box_check_update = true
      node.vm.network :private_network, ip: "192.168.101.1#{i}"
      node.vm.hostname = "flocker-#{i}"

      # setup vm
      node.vm.provider :virtualbox do |v|
        v.name = "flocker-#{i}"
        v.memory = MEMORY
        v.cpus = CPUS
      end

      # setup ssh
      node.ssh.insert_key = false
      node.ssh.private_key_path = [ "~/.ssh/id_rsa", "~/.vagrant.d/insecure_private_key" ]
      node.vm.provision :file, source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"
      node.vm.provision :file, source: "~/.ssh/id_rsa", destination: "~/.ssh/id_rsa"
      node.vm.provision :shell, inline: "cp ~vagrant/.ssh/* /root/.ssh", :privileged => true
#      node.vm.provision :shell, inline: "cd /vagrant ; scp -o StrictHostKeyChecking=no test.sh root@192.168.101.11:/etc/flocker", :privileged => true

      # provision docker
      node.vm.provision :shell, inline: "wget -qO- https://get.docker.com/ | sh", :privileged => true
      node.vm.provision :shell, inline: "usermod -a -G docker vagrant", :privileged => true

      # install client and node
      node.vm.provision :shell, inline: "apt-get update ; apt-get -y install apt-transport-https software-properties-common", :privileged => true
      node.vm.provision :shell, inline: "add-apt-repository -y \"deb https://clusterhq-archive.s3.amazonaws.com/ubuntu/$(lsb_release --release --short)/amd64 /\" ; apt-get update", :privileged => true
      node.vm.provision :shell, inline: "apt-get -y --force-yes install clusterhq-flocker-cli clusterhq-flocker-node", :privileged => true

      # install control
      if i == 1
        node.vm.provision :shell, inline: "echo 'start on runlevel [2345]' >> /etc/init/flocker-control.override ; echo 'stop on runlevel [016]' >> /etc/init/flocker-control.override", :privileged => true
        node.vm.provision :shell, inline: "echo 'flocker-control-api   4523/tcp' >> /etc/services ; echo 'flocker-control-agent 4524/tcp' >> /etc/services", :privileged => true
        node.vm.provision :shell, inline: "service flocker-control start", :privileged => true
      end

      # install plugin
      node.vm.provision :shell, inline: "mkdir -p /etc/flocker ; cp /vagrant/etc/* /etc/flocker ; chmod 700 /etc/flocker", :privileged => true
      node.vm.provision :shell, inline: "cd /etc/flocker ; flocker-ca create-node-certificate ; cp [0-9a-f]*-*-*-*-*.crt node.crt ; cp [0-9a-f]*-*-*-*-*.key node.key", :privileged => true
      if i != 1
        node.vm.provision :shell, inline: "cd /etc/flocker ; scp -o StrictHostKeyChecking=no [0-9a-f]*-*-*-*-*.* root@192.168.101.11:/etc/flocker", :privileged => true
      end
      node.vm.provision :shell, inline: "apt-get -y --force-yes install clusterhq-flocker-docker-plugin ; service flocker-docker-plugin start", :privileged => true
      node.vm.provision :shell, inline: "service flocker-dataset-agent start ; service flocker-container-agent start", :privileged => true
    end
  end
end
